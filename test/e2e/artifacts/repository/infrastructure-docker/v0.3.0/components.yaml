apiVersion: v1
kind: Namespace
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-docker
    control-plane: controller-manager
  name: capd-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.9
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-docker
    cluster.x-k8s.io/v1alpha3: v1alpha3
  name: dockerclusters.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: DockerCluster
    listKind: DockerClusterList
    plural: dockerclusters
    singular: dockercluster
  scope: Namespaced
  versions:
  - name: v1alpha3
    schema:
      openAPIV3Schema:
        description: DockerCluster is the Schema for the dockerclusters API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DockerClusterSpec defines the desired state of DockerCluster.
            properties:
              controlPlaneEndpoint:
                description: ControlPlaneEndpoint represents the endpoint used to
                  communicate with the control plane.
                properties:
                  host:
                    description: Host is the hostname on which the API server is serving.
                    type: string
                  port:
                    description: Port is the port on which the API server is serving.
                    type: integer
                required:
                - host
                - port
                type: object
              failureDomains:
                additionalProperties:
                  description: FailureDomainSpec is the Schema for Cluster API failure
                    domains. It allows controllers to understand how many failure
                    domains a cluster can optionally span across.
                  properties:
                    attributes:
                      additionalProperties:
                        type: string
                      description: Attributes is a free form map of attributes an
                        infrastructure provider might use or require.
                      type: object
                    controlPlane:
                      description: ControlPlane determines if this failure domain
                        is suitable for use by control plane machines.
                      type: boolean
                  type: object
                description: FailureDomains are not usulaly defined on the spec. The
                  docker provider is special since failure domains don't mean anything
                  in a local docker environment. Instead, the docker cluster controller
                  will simply copy these into the Status and allow the Cluster API
                  controllers to do what they will with the defined failure domains.
                type: object
            type: object
          status:
            description: DockerClusterStatus defines the observed state of DockerCluster.
            properties:
              failureDomains:
                additionalProperties:
                  description: FailureDomainSpec is the Schema for Cluster API failure
                    domains. It allows controllers to understand how many failure
                    domains a cluster can optionally span across.
                  properties:
                    attributes:
                      additionalProperties:
                        type: string
                      description: Attributes is a free form map of attributes an
                        infrastructure provider might use or require.
                      type: object
                    controlPlane:
                      description: ControlPlane determines if this failure domain
                        is suitable for use by control plane machines.
                      type: boolean
                  type: object
                description: FailureDomains don't mean much in CAPD since it's all
                  local, but we can see how the rest of cluster API will use this
                  if we populate it.
                type: object
              ready:
                description: Ready denotes that the docker cluster (infrastructure)
                  is ready.
                type: boolean
            required:
            - ready
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.9
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-docker
    cluster.x-k8s.io/v1alpha3: v1alpha3
  name: dockermachines.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: DockerMachine
    listKind: DockerMachineList
    plural: dockermachines
    singular: dockermachine
  scope: Namespaced
  versions:
  - name: v1alpha3
    schema:
      openAPIV3Schema:
        description: DockerMachine is the Schema for the dockermachines API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DockerMachineSpec defines the desired state of DockerMachine
            properties:
              bootstrapped:
                description: Bootstrapped is true when the kubeadm bootstrapping has
                  been run against this machine
                type: boolean
              customImage:
                description: CustomImage allows customizing the container image that
                  is used for running the machine
                type: string
              extraMounts:
                description: ExtraMounts describes additional mount points for the
                  node container These may be used to bind a hostPath
                items:
                  description: Mount specifies a host volume to mount into a container.
                    This is a simplified version of kind v1alpha4.Mount types
                  properties:
                    containerPath:
                      description: Path of the mount within the container.
                      type: string
                    hostPath:
                      description: Path of the mount on the host. If the hostPath
                        doesn't exist, then runtimes should report error. If the hostpath
                        is a symbolic link, runtimes should follow the symlink and
                        mount the real destination to container.
                      type: string
                    readOnly:
                      description: If set, the mount is read-only.
                      type: boolean
                  type: object
                type: array
              preLoadImages:
                description: PreLoadImages allows to pre-load images in a newly created
                  machine. This can be used to speed up tests by avoiding e.g. to
                  download CNI images on all the containers.
                items:
                  type: string
                type: array
              providerID:
                description: ProviderID will be the container name in ProviderID format
                  (docker:////<containername>)
                type: string
            type: object
          status:
            description: DockerMachineStatus defines the observed state of DockerMachine
            properties:
              loadBalancerConfigured:
                description: LoadBalancerConfigured denotes that the machine has been
                  added to the load balancer
                type: boolean
              ready:
                description: Ready denotes that the machine (docker container) is
                  ready
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.9
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-docker
    cluster.x-k8s.io/v1alpha3: v1alpha3
  name: dockermachinetemplates.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: DockerMachineTemplate
    listKind: DockerMachineTemplateList
    plural: dockermachinetemplates
    singular: dockermachinetemplate
  scope: Namespaced
  versions:
  - name: v1alpha3
    schema:
      openAPIV3Schema:
        description: DockerMachineTemplate is the Schema for the dockermachinetemplates
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DockerMachineTemplateSpec defines the desired state of DockerMachineTemplate
            properties:
              template:
                description: DockerMachineTemplateResource describes the data needed
                  to create a DockerMachine from a template
                properties:
                  spec:
                    description: Spec is the specification of the desired behavior
                      of the machine.
                    properties:
                      bootstrapped:
                        description: Bootstrapped is true when the kubeadm bootstrapping
                          has been run against this machine
                        type: boolean
                      customImage:
                        description: CustomImage allows customizing the container
                          image that is used for running the machine
                        type: string
                      extraMounts:
                        description: ExtraMounts describes additional mount points
                          for the node container These may be used to bind a hostPath
                        items:
                          description: Mount specifies a host volume to mount into
                            a container. This is a simplified version of kind v1alpha4.Mount
                            types
                          properties:
                            containerPath:
                              description: Path of the mount within the container.
                              type: string
                            hostPath:
                              description: Path of the mount on the host. If the hostPath
                                doesn't exist, then runtimes should report error.
                                If the hostpath is a symbolic link, runtimes should
                                follow the symlink and mount the real destination
                                to container.
                              type: string
                            readOnly:
                              description: If set, the mount is read-only.
                              type: boolean
                          type: object
                        type: array
                      preLoadImages:
                        description: PreLoadImages allows to pre-load images in a
                          newly created machine. This can be used to speed up tests
                          by avoiding e.g. to download CNI images on all the containers.
                        items:
                          type: string
                        type: array
                      providerID:
                        description: ProviderID will be the container name in ProviderID
                          format (docker:////<containername>)
                        type: string
                    type: object
                required:
                - spec
                type: object
            required:
            - template
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-docker
  name: capd-leader-election-role
  namespace: capd-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-docker
  name: capd-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters
  - machines
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - dockerclusters
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - dockerclusters/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - dockermachines
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - dockermachines/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-docker
  name: capd-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-docker
  name: capd-leader-election-rolebinding
  namespace: capd-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: capd-leader-election-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: capd-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-docker
  name: capd-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: capd-manager-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: capd-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-docker
  name: capd-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: capd-proxy-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: capd-system
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "8443"
    prometheus.io/scheme: https
    prometheus.io/scrape: "true"
  labels:
    cluster.x-k8s.io/provider: infrastructure-docker
    control-plane: controller-manager
  name: capd-controller-manager-metrics-service
  namespace: capd-system
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    cluster.x-k8s.io/provider: infrastructure-docker
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-docker
    control-plane: controller-manager
  name: capd-controller-manager
  namespace: capd-system
spec:
  replicas: 1
  selector:
    matchLabels:
      cluster.x-k8s.io/provider: infrastructure-docker
      control-plane: controller-manager
  template:
    metadata:
      labels:
        cluster.x-k8s.io/provider: infrastructure-docker
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.4.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
      - args:
        - --metrics-addr=0
        - -v=4
        image: gcr.io/k8s-staging-cluster-api/capd-manager-amd64:dev
        livenessProbe:
          httpGet:
            path: /healthz
            port: healthz
        name: manager
        ports:
        - containerPort: 9440
          name: healthz
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: healthz
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /var/run/docker.sock
          name: dockersock
      terminationGracePeriodSeconds: 10
      volumes:
      - hostPath:
          path: /var/run/docker.sock
        name: dockersock
