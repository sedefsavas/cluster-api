---
# E2E test scenario using local dev images and manifests built from the source tree for following providers:
# - cluster-api
# - bootstrap kubeadm
# - control-plane kubeadm
# - docker

# For creating local dev images built from the source tree;
# - `make docker-build REGISTRY=gcr.io/k8s-staging-cluster-api` to build the cluster-api, bootstrap kubeadm, control-plane kubeadm provider images.
# - `make -C test/infrastructure/docker docker-build REGISTRY=gcr.io/k8s-staging-capi-docker` to build the docker provider images..

# For creating local dev manifests built from the source tree;
# - `make generate-manifests REGISTRY=gcr.io/k8s-staging-cluster-api` to generate the cluster-api, bootstrap kubeadm, control-plane kubeadm provider manifests.
# - `make -C test/infrastructure/docker generate-manifests REGISTRY=gcr.io/k8s-staging-capi-docker` to generate the docker provider manifest.

images:
# Use local dev images built source tree;
- name: gcr.io/k8s-staging-cluster-api/cluster-api-controller-amd64:dev
  loadBehavior: mustLoad
- name: gcr.io/k8s-staging-cluster-api/kubeadm-bootstrap-controller-amd64:dev
  loadBehavior: mustLoad
- name: gcr.io/k8s-staging-cluster-api/kubeadm-control-plane-controller-amd64:dev
  loadBehavior: mustLoad
- name: gcr.io/k8s-staging-capi-docker/capd-manager-amd64:dev
  loadBehavior: mustLoad

providers:

- name: cluster-api
  type: CoreProvider
  versions:
  - name: v0.3.0
  # Use manifest from source files
    value: ../../../config
    replacements:
    - old: "imagePullPolicy: Always"
      new: "imagePullPolicy: IfNotPresent"
    - old: "--enable-leader-election"
      new: "--enable-leader-election=false"

- name: kubeadm
  type: BootstrapProvider
  versions:
  - name: v0.3.0
  # Use manifest from source files
    value: ../../../bootstrap/kubeadm/config
    replacements:
    - old: "imagePullPolicy: Always"
      new: "imagePullPolicy: IfNotPresent"
    - old: "--enable-leader-election"
      new: "--enable-leader-election=false"

- name: kubeadm
  type: ControlPlaneProvider
  versions:
  - name: v0.3.0
  # Use manifest from source files
    value: ../../../controlplane/kubeadm/config
    replacements:
    - old: "imagePullPolicy: Always"
      new: "imagePullPolicy: IfNotPresent"
    - old: "--enable-leader-election"
      new: "--enable-leader-election=false"

- name: docker
  type: InfrastructureProvider
  versions:
  - name: v0.3.0
  # Use manifest from source files
    value: ../../../test/infrastructure/docker/config
    replacements:
    - old: "imagePullPolicy: Always"
      new: "imagePullPolicy: IfNotPresent"
    - old: "--enable-leader-election"
      new: "--enable-leader-election=false"
  files:
  # Add a metadata for docker provider
  - sourcePath: "../data/infrastructure-docker/metadata.yaml"
  # Add a cluster template
  - sourcePath: "../data/infrastructure-docker/cluster-template.yaml"

variables:
  DOCKER_SERVICE_DOMAIN: "cluster.local"
  DOCKER_SERVICE_CIDRS: "10.128.0.0/12"
  DOCKER_POD_CIDRS: "192.168.0.0/16"

intervals:
  default/wait-controllers: ["3m", "10s"]
  default/wait-cluster: ["3m", "10s"]
  default/wait-first-control-plane-node: ["3m", "10s"]
  default/wait-other-control-plane-nodes: ["3m", "10s"]
  default/wait-worker-nodes: ["3m", "10s"]
  default/wait-delete-cluster: ["3m", "10s"]
